dockerimg: &dockerimg
    docker:
        - image: docker:18.04.0-ce-git
get_ws: &get_ws
    attach_workspace:
        at: /root
restore_docker_from_cache: &restore_docker_from_cache
    environment:
        IMAGE_NAME: "patroonorg/patroon"
        TMP_IMAGE_NAME: "patroon"
    steps:
        - setup_remote_docker
        - restore_cache:
            keys:
                - v2-{{ .Branch }}
            paths:
                - /caches/dock.tar
        - run:
            name: Load Docker image layer cache
            command: |
                set +o pipefail
                docker load -i /caches/dock.tar | true

version: 2
jobs:
    do_checkout:
        <<: *dockerimg
        steps:
            - checkout
            - persist_to_workspace:
                root: /root
                paths: project
    build:
        <<: *dockerimg
        <<: *restore_docker_from_cache
        steps:
            - *get_ws
            - run:
                name: Build Docker image
                no_output_timeout: 30m
                command: |
                    docker build --pull --cache-from "${IMAGE_NAME}" --tag "${TMP_IMAGE_NAME}" .
            - run:
                name: Save Docker image layer cache
                command: |
                    mkdir -p /caches
                    docker save -o /caches/dock.tar "${IMAGE_NAME}"
            - save_cache:
                key: v2-{{ .Branch }}-{{ epoch }}
                paths:
                    - /caches/dock.tar
    test:
        <<: *dockerimg
        <<: *restore_docker_from_cache
        steps:
            - *get_ws
            - run:
                name: Perform tests
                command: |
                    docker run --name patroon -t patroon /bin/bash -c "cd patRoon; Rscript docker/run_tests.R"
                    # tag if tests were OK
                    docker tag "${TMP_IMAGE_NAME}" "${IMAGE_NAME}"
            - run:
                name: Copy test results
                when: always
                command: |
                    CONTAINER_ID=`docker ps -aqf "name=patroon"`
                    mkdir /tmp/tests
                    docker cp $CONTAINER_ID:/home/patRoon/patRoon/junit.xml /tmp/tests/
                    cat /tmp/tests/junit.xml
            - store_test_results:
                path: /tmp/tests
            - deploy:
                name: Push tested Docker image
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        echo "$DH_PASS" | docker login -u "$DH_USER" --password-stdin
                        git_sha="$(git rev-parse --short HEAD)"
                        docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${git_sha}-master"
                        docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:${git_sha}-master"
                    fi
            - deploy:
                name: Push failed Docker image
                when: on_fail
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        echo "$DH_PASS" | docker login -u "$DH_USER" --password-stdin
                        git_sha="$(git rev-parse --short HEAD)"
                        docker tag "${TMP_IMAGE_NAME}" "${IMAGE_NAME}:${git_sha}-master-failed"
                        docker push "${IMAGE_NAME}:${git_sha}-master-failed"
                    fi

workflows:
    version: 2
    btd:
        jobs:
            - do_checkout
            - build:
                requires:
                    - do_checkout
            - test:
                requires:
                    - build
