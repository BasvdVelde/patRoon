% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_groups.R
\docType{class}
\name{featureGroups-class}
\alias{featureGroups-class}
\alias{featureGroups}
\alias{names,featureGroups-method}
\alias{length,featureGroups-method}
\alias{show,featureGroups-method}
\alias{groups,featureGroups-method}
\alias{groups}
\alias{analysisInfo,featureGroups-method}
\alias{groupInfo,featureGroups-method}
\alias{groupInfo}
\alias{featureTable,featureGroups-method}
\alias{getFeatures,featureGroups-method}
\alias{getFeatures}
\alias{groupFeatIndex,featureGroups-method}
\alias{groupFeatIndex}
\alias{[,featureGroups,ANY,ANY,ANY-method}
\alias{export,featureGroups-method}
\alias{export}
\alias{groupTable,featureGroups-method}
\alias{groupTable}
\alias{plot,featureGroups,ANY-method}
\alias{plotInt,featureGroups-method}
\alias{plotChord,featureGroups-method}
\alias{plotEIC,featureGroups-method}
\alias{plotVenn,featureGroups-method}
\alias{unique,featureGroups-method}
\alias{overlap,featureGroups-method}
\alias{overlap}
\alias{regression,featureGroups-method}
\alias{regression}
\title{Base class for grouped features.}
\usage{
\S4method{names}{featureGroups}(x)

\S4method{length}{featureGroups}(x)

\S4method{show}{featureGroups}(object)

\S4method{groups}{featureGroups}(object)

\S4method{analysisInfo}{featureGroups}(obj)

\S4method{groupInfo}{featureGroups}(fGroups)

\S4method{featureTable}{featureGroups}(obj)

\S4method{getFeatures}{featureGroups}(fGroups)

\S4method{groupFeatIndex}{featureGroups}(fGroups)

\S4method{[}{featureGroups,ANY,ANY,ANY}(x, i, j, ..., drop = TRUE)

\S4method{export}{featureGroups}(fGroups, type, out)

\S4method{groupTable}{featureGroups}(fGroups, average = FALSE)

\S4method{plot}{featureGroups,ANY}(x, retMin = TRUE, ...)

\S4method{plotInt}{featureGroups}(obj, average = FALSE, ...)

\S4method{plotChord}{featureGroups}(obj, addSelfLinks = FALSE,
  addRetMzPlots = TRUE, average = FALSE, outerGroups = NULL,
  addIntraOuterGroupLinks = FALSE, ...)

\S4method{plotEIC}{featureGroups}(obj, rtWindow = 30, mzWindow = 0.005,
  retMin = FALSE, topMost = NULL, EICs = NULL,
  showPeakArea = FALSE, showFGroupRect = TRUE, title = NULL,
  colourBy = c("none", "rGroups", "fGroups"), showLegend = TRUE,
  onlyPresent = TRUE, annotate = c("none", "ret", "mz"),
  showProgress = FALSE, ...)

\S4method{plotVenn}{featureGroups}(obj, which = NULL, ...)

\S4method{unique}{featureGroups}(x, which, relativeTo = NULL,
  outer = FALSE)

\S4method{overlap}{featureGroups}(fGroups, which, exclusive = FALSE)

\S4method{regression}{featureGroups}(fGroups)
}
\arguments{
\item{fGroups, obj, x, object}{\code{featureGroups} object to be accessed.}

\item{i}{Either a numeric, character or logical \code{vector} that is used to
select analyses by their index, name (for index order/names see
\code{analysisInfo()}) and logical selection, respectively. If missing all
analyses are selected.}

\item{j}{Either a numeric, character or logical \code{vector} that is used to
select feature groups by their index, name (for index order/names use
\code{groupInfo}) and logical selection, respectively. If missing all
feature groups are selected.}

\item{\dots}{Ignored for \code{"["} operator or passed to
\code{\link[graphics]{plot}} (\code{plot}, \code{plotInt} and
\code{plotEIC}), \pkg{\link{VennDiagram}} plotting functions
(\code{plotVenn}) or \code{\link{chordDiagram}} (\code{plotChord}).}

\item{drop}{Remove feature groups that are not present anymore in any of the
analyses after subsetting.}

\item{type}{Which file type should be exported: \code{"brukerpa"} (Bruker
ProfileAnalysis), \code{"brukertasq"} (Bruker TASQ) or \code{"mzmine"}
(MZMine).}

\item{out}{The destination file for the exported data.}

\item{average}{Average data within replicate groups.}

\item{retMin}{Plot retention time in minutes (instead of seconds).}

\item{addSelfLinks}{If \code{TRUE} then 'self-links' are added which
represent non-shared data.}

\item{addRetMzPlots}{Set to \code{TRUE} to enable \emph{m/z} \emph{vs}
retention time scatter plots.}

\item{outerGroups}{Character vector of names to be used as outer groups. The
values in the specified vector should be named by analysis names
(\code{average} set to \code{FALSE}) or replicate group names
(\code{average} set to \code{TRUE}), for instance: \code{c(analysis1 =
"group1", analysis2 = "group1", analysis3 = "group2")}. Set to \code{NULL}
to disable outer groups.}

\item{addIntraOuterGroupLinks}{If \code{TRUE} then links will be added within
outer groups.}

\item{rtWindow}{Retention time (in seconds) that will be subtracted/added to
respectively the minimum and maximum retention time of the plotted feature
groups. Thus, setting this value to a positive value will 'zoom out' on the
retention time axis.}

\item{mzWindow}{The \emph{m/z} value (in Da) which will be subtracted/added
to a feature group \emph{m/z} value to determine the width of its EIC.}

\item{topMost}{Only plot EICs from features within this number of top most
intense analyses. If \code{NULL} then all analyses are used for plotted.}

\item{EICs}{Internal parameter for now and should be kept at \code{NULL}
(default).}

\item{showPeakArea}{Set to \code{TRUE} to display integrated chromatographic
peak ranges by filling (shading) their areas.}

\item{showFGroupRect}{Set to \code{TRUE} to mark the full retention/intensity
range of all features within a feature group by drawing a rectangle around
it.}

\item{title}{Character string used for title of the plot. If \code{NULL} a
title will be automatically generated.}

\item{colourBy}{How to colour different extracted ion chromatograms within
the plot: \code{"none"} for a single colour or
\code{"rGroups"}/\code{"fGroups"} for a distinct colour per
replicate/feature group.}

\item{showLegend}{If \code{TRUE} a legend will be shown with either replicate
groups (\code{colourBy} == \code{"rGroups"}) or feature groups
(\code{colourBy} == \code{"fGroups"}). If \code{colourBy} is \code{"none"}
no legend will be shown.}

\item{onlyPresent}{If \code{TRUE} then EICs will only be generated for
analyses in which a particular feature group was detected. Disabling this
option might be useful to see if any features were 'missed'.}

\item{annotate}{If set to \code{"ret"} and/or \code{"mz"} then retention
and/or \emph{m/z} values will be drawn for each plotted feature group.}

\item{showProgress}{if set to \code{TRUE} then a text progressbar will be
displayed when all EICs are being plot. Set to \code{"none"} to disable any
annotation.}

\item{which}{A character vector with replicate groups used for comparison.}

\item{relativeTo}{A character vector with replicate groups that should be
used for unique comparison. If \code{NULL} then all replicate groups are
used for comparison. Replicate groups specified in \code{which} are
ignored.}

\item{outer}{If \code{TRUE} then only feature groups are kept which do not
overlap between the specified replicate groups for the \code{which}
parameter.}

\item{exclusive}{If \code{TRUE} then all feature groups are removed that are
not unique to the given replicate groups.}
}
\value{
\code{plotVenn} (invisibly) returns a list with the following fields: \itemize{
\item \code{gList} the \code{gList} object that was returned by
  the utilized \pkg{\link{VennDiagram}} plotting function.
\item \code{areas} The total area (\emph{i.e.} feature group count) for each plotted group.
\item \code{intersectionCounts} The number of intersections between groups.
}

The order for the \code{areas} and \code{intersectionCounts} fields is the same as the parameter order
from the used plotting function (see \emph{e.g.} \code{\link{draw.pairwise.venn}} and
\code{\link{draw.triple.venn}}).

A \code{data.frame} containing retention, \emph{m/z}, R squared,
  intercepts and slopes for all feature groups.
}
\description{
This class holds all the information for grouped features.
}
\details{
The \code{featureGroup} class is the workhorse of \pkg{patRoon}: almost all
functionality operate on its instantiated objects. The class holds all
information from grouped features (obtained from \code{\link{features}}).
This class itself is \code{virtual}, hence, objects are not created directly
from it. Instead, 'feature groupers' such as \code{\link{groupFeaturesXCMS}}
return a \code{featureGroups} derived object after performing the actual
grouping of features across analyses.
}
\section{Methods (by generic)}{
\itemize{
\item \code{names}: Obtain feature group names.

\item \code{length}: Obtain number of feature groups.

\item \code{show}: Shows summary information for this object.

\item \code{groups}: Accessor for \code{groups} slot.

\item \code{analysisInfo}: Obtain analysisInfo (see analysisInfo slot in \code{\link{features}}).

\item \code{groupInfo}: Accessor for \code{groupInfo} slot.

\item \code{featureTable}: Obtain feature information (see \code{\link{features}}).

\item \code{getFeatures}: Accessor for \code{features} slot.

\item \code{groupFeatIndex}: Accessor for \code{ftindex} slot.

\item \code{[}: Operator to subset on analyses and/or feature
groups.

\item \code{export}: Exports feature groups to a \file{.csv} file that
is readable to Bruker ProfileAnalysis (a 'bucket table'), Bruker TASQ (an
analyte database) or that is suitable as input for the \verb{Targeted peak
detection} functionality of \href{http://mzmine.github.io/}{MZmine}.

\item \code{groupTable}: Obtain summary table (a \code{\link{data.table}})
with retention, \emph{m/z} and intensity information.

\item \code{plot}: Generates an \emph{m/z} \emph{vs} retention time plot
for all featue groups.

\item \code{plotInt}: Generates a line plot for the (averaged) intensity
of feature groups within all analyses

\item \code{plotChord}: Generates a chord diagram which can be used to
visualize shared presence of feature groups between analyses or replicate
groups. In addition, analyses/replicates sharing similar properties
(\emph{e.g.} location, age, type) may be grouped to enhance visualization
between these 'outer groups'.

\item \code{plotEIC}: Plots extracted ion chromatograms (EICs) of feature
groups. This function uses the \pkg{xcms} package for loading EIC
data.

\item \code{plotVenn}: plots a Venn diagram (using
\pkg{\link{VennDiagram}}) outlining unique and shared feature groups
between up to five replicate groups.

\item \code{unique}: Obtain a subset with unique feature groups
present in one or more specified replicate group(s).

\item \code{overlap}: Obtain a subset with feature groups that overlap
between a set of specified replicate group(s).

\item \code{regression}: Performs linear regression for all detected feature
groups within specified analyses. The analyses to be used (\emph{e.g.} a
set of standards) must have the \code{conc} column set in the
\link{analysis-information} that was used to generate the feature groups.
}}

\section{Slots}{

\describe{
\item{\code{groups}}{Matrix (\code{\link{data.table}}) with intensities for each
feature group (columns) per analysis (rows). Access with \code{groups}
method.}

\item{\code{analysisInfo,features}}{\link[=analysis-information]{Analysis info} and
\code{\link{features}} class associated with this object. Access with
\code{analysisInfo} and \code{featureTable} methods, respectively.}

\item{\code{groupInfo}}{\code{data.frame} with retention time (\code{rts} column, in
seconds) and \emph{m/z} (\code{mzs} column) for each feature group. Access
with \code{groupInfo} method.}

\item{\code{ftindex}}{Matrix (\code{\link{data.table}}) with feature indices for each
feature group (columns) per analysis (rows). Each index corresponds to the
row within the feature table of the analysis (see
\code{\link{featureTable}}).}
}}

\references{
\addCitations{circlize}{1}
}
